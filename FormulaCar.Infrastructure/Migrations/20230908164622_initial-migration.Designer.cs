// <auto-generated />
using System;
using FormulaCar.Infrastructure.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FormulaCar.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230908164622_initial-migration")]
    partial class initialmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("FormulaCar.Domain.Model.Achievement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DriverId")
                        .HasColumnType("TEXT");

                    b.Property<int>("champions")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("createdDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("fastestLap")
                        .HasColumnType("INTEGER");

                    b.Property<int>("poleposition")
                        .HasColumnType("INTEGER");

                    b.Property<int>("racewins")
                        .HasColumnType("INTEGER");

                    b.Property<int>("status")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("updatedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DriverId");

                    b.ToTable("achievements");
                });

            modelBuilder.Entity("FormulaCar.Domain.Model.Driver", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("createdDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("dateofbirth")
                        .HasColumnType("TEXT");

                    b.Property<int>("driverNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("status")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("updatedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("drivers");
                });

            modelBuilder.Entity("FormulaCar.Domain.Model.Achievement", b =>
                {
                    b.HasOne("FormulaCar.Domain.Model.Driver", "driver")
                        .WithMany("Achievements")
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Achivement_Driver");

                    b.Navigation("driver");
                });

            modelBuilder.Entity("FormulaCar.Domain.Model.Driver", b =>
                {
                    b.Navigation("Achievements");
                });
#pragma warning restore 612, 618
        }
    }
}
